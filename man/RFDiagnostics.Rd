% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RFDiagnostics.R
\name{RFDiagnostics}
\alias{RFDiagnostics}
\title{Random Forest Cell Annotation and Variable Importance Scores}
\usage{
RFDiagnostics(
  query_data,
  reference_data,
  query_cell_type_col,
  ref_cell_type_col,
  n_tree = 500,
  compute_importance = TRUE
)
}
\arguments{
\item{query_data}{A SingleCellExperiment object containing the query dataset with logcounts assay.}

\item{reference_data}{A SingleCellExperiment object containing the reference dataset with logcounts assay.}

\item{query_cell_type_col}{A character string specifying the column name in the query dataset containing cell type annotations.}

\item{ref_cell_type_col}{A character string specifying the column name in the reference dataset containing cell type annotations.}

\item{n_tree}{An integer specifying the number of trees to grow in the Random Forest. Default is 500.}

\item{compute_importance}{A logical value indicating whether to compute variable importance scores for each pairwise combination of cell types. Default is TRUE.}
}
\value{
A list with the following components:
\describe{
  \item{rf_pred}{A character vector of predicted cell types for the query dataset.}
  \item{comparison_table}{A table comparing true cell annotations and RF predictions for the query dataset.}
  \item{var_importance}{A list of data frames containing the variable importance scores for each pair of cell types. Only returned if \code{compute_importance} is TRUE.}
}
}
\description{
Perform Random Forest Diagnostics on Query and Reference Single-Cell RNA-Seq Data.
}
\details{
This function trains a Random Forest (RF) model using a reference dataset and then predicts cell types in a query dataset. 
It provides a comparison table of true vs. predicted cell types. Optionally, it can also compute variable importance scores for each 
possible pairwise combination of cell types, providing insights into the genes that are most important for distinguishing between 
each pair of cell types.
}
\examples{
# Load necessary library
library(SingleCellExperiment)
library(scuttle)
library(scran)
library(SingleR)
library(ggplot2)

# Load data
sce <- scRNAseq::HeOrganAtlasData(tissue = c("Marrow"), ensembl = FALSE)

# Divide the data into reference and query datasets
set.seed(100)
indices <- sample(ncol(assay(sce)), size = floor(0.7 * ncol(assay(sce))), replace = FALSE)
ref_data <- sce[, indices]
query_data <- sce[, -indices]

# log transform datasets
ref_data <- scuttle::logNormCounts(ref_data)
query_data <- scuttle::logNormCounts(query_data)

# Get cell type scores using SingleR (or any other cell type annotation method)
scores <- SingleR::SingleR(query_data, ref_data, labels = ref_data$reclustered.broad)

# Add labels to query object
colData(query_data)$labels <- scores$labels

# Selecting highly variable genes (can be customized by the user)
ref_var <- scran::getTopHVGs(ref_data, n = 500)
query_var <- scran::getTopHVGs(query_data, n = 500)

# Intersect the gene symbols to obtain common genes
common_genes <- intersect(ref_var, query_var)
ref_data_subset <- ref_data[common_genes, ]
query_data_subset <- query_data[common_genes, ]

# Compare PCA subspaces
rf_output <- RFDiagnostics(reference_data = ref_data_subset, query_data = query_data_subset, 
                           query_cell_type_col = "labels", 
                           ref_cell_type_col = "reclustered.broad", 
                           n_tree = 500)

}
\author{
Anthony Christidis, \email{anthony-alexander_christidis@hms.harvard.edu}
}
