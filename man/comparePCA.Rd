% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/comparePCA.R, R/plot.comparePCA.R
\name{comparePCA}
\alias{comparePCA}
\alias{plot.comparePCA}
\title{Compare Principal Components Analysis (PCA) Results}
\usage{
comparePCA(
  reference_data,
  query_data,
  pc_subset = c(1:5),
  n_top_vars = 50,
  metric = c("cosine", "correlation")[1],
  correlation_method = c("spearman", "pearson")[1]
)

\method{plot}{comparePCA}(x, ...)
}
\arguments{
\item{reference_data}{A \code{\linkS4class{SingleCellExperiment}} object containing numeric expression matrix for the reference cells.}

\item{query_data}{A \code{\linkS4class{SingleCellExperiment}} object containing numeric expression matrix for the query cells.}

\item{pc_subset}{A numeric vector specifying the subset of principal components (PCs) to compare. Default is the first five PCs.}

\item{n_top_vars}{An integer indicating the number of top loading variables to consider for each PC. Default is 50.}

\item{metric}{The similarity metric to use. It can be either "cosine" or "correlation". Default is "cosine".}

\item{correlation_method}{The correlation method to use if metric is "correlation". It can be "spearman" 
or "pearson". Default is "spearman".}

\item{x}{A numeric matrix output from the `comparePCA` function, representing 
cosine similarities between query and reference principal components.}

\item{...}{Additional arguments passed to the plotting function.}
}
\value{
A similarity matrix comparing the principal components of the reference and query datasets.
Each element (i, j) in the matrix represents the similarity between the i-th principal component 
of the reference dataset and the j-th principal component of the query dataset.

A ggplot object representing the heatmap of cosine similarities.
}
\description{
This function compares the principal components (PCs) obtained from separate PCA on reference and query 
datasets for a single cell type using either cosine similarity or correlation.

This function generates a heatmap to visualize the cosine similarities between 
principal components from the output of the `comparePCA` function.
}
\details{
This function compares the PCA results between the reference and query datasets by computing cosine 
similarities or correlations between the loadings of top variables for each pair of principal components. It first 
extracts the PCA rotation matrices from both datasets and identifies the top variables with highest loadings for 
each PC. Then, it computes the cosine similarities or correlations between the loadings of top variables for each 
pair of PCs. The resulting matrix contains the similarity values, where rows represent reference PCs and columns 
represent query PCs.

The function converts the input matrix into a long-format data frame 
suitable for plotting with `ggplot2`. The rows in the heatmap are ordered in 
reverse to match the conventional display format. The heatmap uses a blue-white-red 
color gradient to represent cosine similarity values, where blue indicates negative 
similarity, white indicates zero similarity, and red indicates positive similarity.
}
\examples{
# Load necessary library
library(scRNAseq)
library(scuttle)
library(scran)
library(SingleR)
library(scater)

# Load data
sce <- HeOrganAtlasData(tissue = c("Marrow"), ensembl = FALSE)

# Divide the data into reference and query datasets
set.seed(100)
indices <- sample(ncol(assay(sce)), size = floor(0.7 * ncol(assay(sce))), replace = FALSE)
ref_data <- sce[, indices]
query_data <- sce[, -indices]

# Log transform datasets
ref_data <- logNormCounts(ref_data)
query_data <- logNormCounts(query_data)

# Get cell type scores using SingleR (or any other cell type annotation method)
scores <- SingleR(query_data, ref_data, labels = ref_data$reclustered.broad)

# Add labels to query object
colData(query_data)$labels <- scores$labels

# Selecting highly variable genes (can be customized by the user)
ref_var <- getTopHVGs(ref_data, n = 500)
query_var <- getTopHVGs(query_data, n = 500)

# Intersect the gene symbols to obtain common genes
common_genes <- intersect(ref_var, query_var)
ref_data_subset <- ref_data[common_genes, ]
query_data_subset <- query_data[common_genes, ]

# Subset reference and query data for a specific cell type
ref_data_subset <- ref_data_subset[, which(ref_data_subset$reclustered.broad == "CD8")]
query_data_subset <- query_data_subset[, which(colData(query_data_subset)$labels == "CD8")]

# Run PCA on the reference and query datasets
ref_data_subset <- runPCA(ref_data_subset)
query_data_subset <- runPCA(query_data_subset)

# Call the PCA comparison function
similarity_mat <- comparePCA(query_data_subset, ref_data_subset, 
                             pc_subset = c(1:5), 
                             n_top_vars = 50,
                             metric = c("cosine", "correlation")[1], 
                             correlation_method = c("spearman", "pearson")[1])

# Create the heatmap
plot(similarity_mat)

}
\seealso{
\code{\link{plot.comparePCA}}

\code{\link{comparePCA}}
}
\author{
Anthony Christidis, \email{anthony-alexander_christidis@hms.harvard.edu}
}
