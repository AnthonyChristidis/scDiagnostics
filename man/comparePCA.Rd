% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/comparePCA.R
\name{comparePCA}
\alias{comparePCA}
\title{Compare Principal Components Analysis (PCA) Results}
\usage{
comparePCA(
  reference_data,
  query_data,
  n_components = 5,
  metric = c("cosine", "correlation")[1],
  correlation_method = c("spearman", "pearson")[1]
)
}
\arguments{
\item{reference_data}{A \code{\linkS4class{SingleCellExperiment}} object containing numeric expression matrix for the reference cells.}

\item{query_data}{A \code{\linkS4class{SingleCellExperiment}} object containing numeric expression matrix for the query cells.}

\item{n_components}{Number of principal components to consider. Default is 5.}

\item{metric}{The similarity metric to use. It can be either "cosine" or "correlation". Default is "cosine".}

\item{correlation_method}{The correlation method to use if metric is "correlation". It can be "spearman" 
or "pearson". Default is "spearman".}
}
\value{
A similarity matrix comparing the principal components of the reference and query datasets.
Each element (i, j) in the matrix represents the similarity between the i-th principal component 
of the reference dataset and the j-th principal component of the query dataset.
}
\description{
This function compares the principal components (PCs) obtained from separate PCA on reference and query 
datasets for a single cell type using either cosine similarity or correlation.
}
\details{
The function compares the PCs obtained from separate PCA on the reference and query datasets for a single cell type.
It computes the similarity between the principal components using either cosine similarity or correlation. 
Cosine similarity measures the cosine of the angle between the PC vectors, while correlation computes the 
correlation coefficient between them. The function returns a similarity matrix where each element (i, j) 
represents the similarity between the i-th PC of the reference dataset and the j-th PC of the query dataset.

If cosine similarity is chosen, the function computes the cosine similarity between each pair of PC vectors. 
If correlation is chosen, it calculates the correlation coefficient using either Spearman or Pearson method.
}
\examples{
# Load necessary library
library(scRNAseq)
library(scuttle)
library(scran)
library(SingleR)
library(ComplexHeatmap)
library(scater)

# Load data
sce <- HeOrganAtlasData(tissue = c("Marrow"), ensembl = FALSE)

# Divide the data into reference and query datasets
set.seed(100)
indices <- sample(ncol(assay(sce)), size = floor(0.7 * ncol(assay(sce))), replace = FALSE)
ref_data <- sce[, indices]
query_data <- sce[, -indices]

# Log transform datasets
ref_data <- logNormCounts(ref_data)
query_data <- logNormCounts(query_data)

# Get cell type scores using SingleR (or any other cell type annotation method)
scores <- SingleR(query_data, ref_data, labels = ref_data$reclustered.broad)

# Add labels to query object
colData(query_data)$labels <- scores$labels

# Selecting highly variable genes (can be customized by the user)
ref_var <- getTopHVGs(ref_data, n = 500)
query_var <- getTopHVGs(query_data, n = 500)

# Intersect the gene symbols to obtain common genes
common_genes <- intersect(ref_var, query_var)
ref_data_subset <- ref_data[common_genes, ]
query_data_subset <- query_data[common_genes, ]

# Subset reference and query data for a specific cell type
ref_data_subset <- ref_data_subset[, which(ref_data_subset$reclustered.broad == "CD8")]
query_data_subset <- query_data_subset[, which(colData(query_data_subset)$labels == "CD8")]

# Run PCA on the reference and query datasets
ref_data_subset <- runPCA(ref_data_subset)
query_data_subset <- runPCA(query_data_subset)

# Call the PCA comparison function
similarity_mat <- comparePCA(query_data_subset, ref_data_subset, 
                             n_components = 5, 
                             metric = c("cosine", "correlation")[1], 
                             correlation_method = c("spearman", "pearson")[1])

# Create the heatmap
plot(similarity_mat)

}
\seealso{
\code{\link{plot.comparePCA}}
}
\author{
Anthony Christidis, \email{anthony-alexander_christidis@hms.harvard.edu}
}
