% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.detectAnomaly.R
\name{plot.detectAnomaly}
\alias{plot.detectAnomaly}
\title{Create Faceted Scatter Plots for Specified PC Combinations From \code{detectAnomaly} Object}
\usage{
\method{plot}{detectAnomaly}(x, cell_type, pc_subset = NULL, ...)
}
\arguments{
\item{x}{A list object containing the anomaly detection results from the \code{detectAnomaly} function. 
Each element of the list should correspond to a cell type and contain \code{reference_pca_subset}, \code{query_pca_subset}, 
\code{var_explained}, and \code{anomaly}.}

\item{cell_type}{A character string specifying the cell type for which the plots should be generated. This should
be a name present in \code{x}.}

\item{pc_subset}{A numeric vector specifying the indices of the PCs to be included in the plots. If NULL, all PCs
in \code{reference_pca_subset} will be included.}

\item{...}{Additional arguments.}
}
\value{
A ggplot object displaying the faceted scatter plots for the specified PC combinations.
}
\description{
This function generates faceted scatter plots for specified principal component (PC) combinations
within an anomaly detection object. It allows visualization of the relationship between specified
PCs and highlights anomalies detected by the Isolation Forest algorithm.
}
\details{
The function extracts the specified PCs from the given anomaly detection object and generates
scatter plots for each pair of PCs. It uses \code{ggplot2} to create a faceted plot where each facet represents
a pair of PCs. Anomalies are highlighted in red, while normal points are shown in black.
}
\examples{
# Load required libraries
library(scRNAseq)
library(scuttle)
library(SingleR)
library(scran)
library(scater)

# Load data
sce <- HeOrganAtlasData(tissue = c("Marrow"), ensembl = FALSE)

# Divide the data into reference and query datasets
set.seed(100)
indices <- sample(ncol(assay(sce)), size = floor(0.7 * ncol(assay(sce))), replace = FALSE)
ref_data <- sce[, indices]
query_data <- sce[, -indices]

# log transform datasets
ref_data <- logNormCounts(ref_data)
query_data <- logNormCounts(query_data)

# Get cell type scores using SingleR (or any other cell type annotation method)
scores <- SingleR(query_data, ref_data, labels = ref_data$reclustered.broad)

# Add labels to query object
colData(query_data)$labels <- scores$labels

# Selecting highly variable genes (can be customized by the user)
ref_var <- getTopHVGs(ref_data, n = 2000)
query_var <- getTopHVGs(query_data, n = 2000)

# Intersect the gene symbols to obtain common genes
common_genes <- intersect(ref_var, query_var)
ref_data_subset <- ref_data[common_genes, ]
query_data_subset <- query_data[common_genes, ]

# Run PCA on the reference data
ref_data_subset <- runPCA(ref_data_subset, ncomponents = 50)

# Store PCA anomaly data and plots
anomaly_output <- detectAnomaly(ref_data_subset, query_data_subset, 
                                ref_cell_type_col = "reclustered.broad", 
                                query_cell_type_col = "labels",
                                n_components = 10,
                                n_tree = 500,
                                anomaly_treshold = 0.5) 

# Plot the output for a cell type
plot(anomaly_output, cell_type = "CD8", pc_subset = c(1:5))

}
\seealso{
\code{\link{detectAnomaly}}
}
\author{
Anthony Christidis, \email{anthony-alexander_christidis@hms.harvard.edu}
}
