% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.nearestNeighborDiagnostics.R
\name{plot.nearestNeighborDiagnostics}
\alias{plot.nearestNeighborDiagnostics}
\title{Plot Density of Probabilities for Cell Type Classification}
\usage{
\method{plot}{nearestNeighborDiagnostics}(x, cell_types = NULL, prob_type = c("query", "reference")[1], ...)
}
\arguments{
\item{x}{An object of class \code{nearestNeighbotDiagnostics} containing the probabilities calculated by the \code{\link{nearestNeighborDiagnostics}} function.}

\item{cell_types}{A character vector specifying the cell types to include in the plot. If NULL, all cell types in \code{x} will be plotted. Default is NULL.}

\item{prob_type}{A character string specifying the type of probability to plot. Must be either "query" or "reference". Default is "query".}

\item{...}{Additional arguments to be passed to \code{\link[ggplot2]{geom_density}}.}
}
\value{
A ggplot2 density plot.
}
\description{
This function generates a density plot showing the distribution of probabilities for each sample of belonging to 
either the reference or query dataset for each cell type.
}
\details{
This function creates a density plot to visualize the distribution of probabilities for each sample belonging to the 
reference or query dataset for each cell type. It utilizes the ggplot2 package for plotting.
}
\examples{
\donttest{
# Load necessary library
library(scRNAseq)
library(scuttle)
library(scran)
library(SingleR)
library(scater)

# Load data
sce <- HeOrganAtlasData(tissue = c("Marrow"), ensembl = FALSE)

# Divide the data into reference and query datasets
set.seed(100)
indices <- sample(ncol(assay(sce)), size = floor(0.7 * ncol(assay(sce))), replace = FALSE)
ref_data <- sce[, indices]
query_data <- sce[, -indices]

# log transform datasets
ref_data <- logNormCounts(ref_data)
query_data <- logNormCounts(query_data)

# Get cell type scores using SingleR (or any other cell type annotation method)
scores <- SingleR(query_data, ref_data, labels = ref_data$reclustered.broad)

# Add labels to query object
colData(query_data)$labels <- scores$labels

# Selecting highly variable genes (can be customized by the user)
ref_var <- getTopHVGs(ref_data, n = 500)
query_var <- getTopHVGs(query_data, n = 500)

# Intersect the gene symbols to obtain common genes
common_genes <- intersect(ref_var, query_var)
ref_data_subset <- ref_data[common_genes, ]
query_data_subset <- query_data[common_genes, ]

# Run PCA on the reference data
ref_data_subset <- runPCA(ref_data_subset)

# Project the query data onto PCA space of reference
nn_output <- nearestNeighborDiagnostics(query_data_subset, ref_data_subset,
                                        n_neighbor = 15, 
                                        n_components = 10,
                                        pc_subset = c(1:10),
                                        query_cell_type_col = "labels", 
                                        ref_cell_type_col = "reclustered.broad")

# Plot output
plot(nn_output, cell_types = c("CD4", "CD8", "B_and_plasma", "Myeloid"),
     prob_type = "query")
}

}
\seealso{
\code{\link{nearestNeighborDiagnostics}}
}
\author{
Anthony Christidis, \email{anthony-alexander_christidis@hms.harvard.edu}
}
