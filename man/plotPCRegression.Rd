% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/regressPC.R
\name{plotPCRegression}
\alias{plotPCRegression}
\title{Plot PC Regression diagnostic}
\usage{
plotPCRegression(sce, regressPC_res, dep.vars = NULL, indep.var, max_pc = 20)
}
\arguments{
\item{sce}{An object of class \code{\linkS4class{SingleCellExperiment}}
containing the data for regression analysis.}

\item{regressPC_res}{a result from \code{\link{regressPC}}}

\item{dep.vars}{character. Dependent variable(s). Determines which principal
component(s) (e.g., "PC1", "PC2", etc.) are used as explanatory variables.
Principal components are expected to be stored in a PC matrix named
\code{"PCA"} in the \code{reducedDims} of \code{sce}. Defaults to
\code{NULL} which will then regress on each principal component present in
the PC matrix.}

\item{indep.var}{character. Independent variable. A column name in the
\code{colData} of \code{sce} specifying the response variable.}

\item{max_pc}{The maximum number of PCs to show on the plot. Set to 0 to show
all.}
}
\value{
a ggplot2 plot object
}
\description{
Plot the result of a PC regression diagnostic.
}
\examples{
library(scater)
library(scran)
library(scRNAseq)
library(SingleR)

# Load data
sce <- HeOrganAtlasData(tissue = c("Marrow"), ensembl = FALSE)

# Divide the data into reference and query datasets
set.seed(100)
indices <- sample(ncol(sce),
    size = floor(0.7 * ncol(sce)),
    replace = FALSE
)
ref <- sce[, indices]
query <- sce[, -indices]

# log transform datasets
ref <- logNormCounts(ref)
query <- logNormCounts(query)

# Run PCA
query <- runPCA(query)

# Get cell type scores using SingleR
# Note: replace when using cell type annotation scores from other methods
scores <- SingleR(query, ref, labels = ref$reclustered.broad)

# Add labels to query object
query$labels <- scores$labels

# Specify the dependent variables (principal components) and
# independent variable (e.g., "labels")
dep.vars <- paste0("PC", 1:3)
indep.var <- "labels"

# Perform linear regression on multiple principal components
res <- regressPC(
    sce = query,
    dep.vars = dep.vars,
    indep.var = indep.var
)

plotRegressPC(query, res, dep.vars, indep.var)

}
