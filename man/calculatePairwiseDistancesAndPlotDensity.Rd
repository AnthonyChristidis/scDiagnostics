% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculatePairwiseDistancesAndPlotDensity.R
\name{calculatePairwiseDistancesAndPlotDensity}
\alias{calculatePairwiseDistancesAndPlotDensity}
\title{Pairwise Distance Analysis and Density Visualization}
\usage{
calculatePairwiseDistancesAndPlotDensity(
  query_data,
  reference_data,
  query_cell_type_col,
  ref_cell_type_col,
  cell_type_query,
  cell_type_reference,
  distance_metric,
  correlation_method = "pearson"
)
}
\arguments{
\item{query_data}{A SingleCellExperiment object containing numeric expression matrix for the query cells}

\item{reference_data}{A SingleCellExperiment object containing numeric expression matrix for the reference cells}

\item{query_cell_type_col}{The column name in the query_data metadata specifying the cell types}

\item{ref_cell_type_col}{The column name in the ref_data metadata specifying the cell types}

\item{cell_type_query}{The query cell type for which distances or correlations are calculated.}

\item{cell_type_reference}{The reference cell type for which distances or correlations are calculated.}

\item{distance_metric}{The distance metric to use for calculating pairwise distances, such as "euclidean" or "manhattan".
Set it to "correlation" for calculating correlation coefficients.}

\item{correlation_method}{The correlation method to use when distance_metric is "correlation".
Possible values: "pearson", "spearman".}
}
\description{
This function calculates pairwise distances or correlations between query and reference cells of a specific cell type based on the provided distance or correlation metric.
It then plots density plots to visualize the distribution of distances or correlations for different pairwise comparisons.
}
\examples{
library(scran)
library(scRNAseq)
library(SingleR)

# Load data
sce <- HeOrganAtlasData(tissue = c("Marrow"), ensembl = FALSE)

# Divide the data into reference and query datasets
set.seed(100)
indices <- sample(ncol(assay(sce)), size = floor(0.7 * ncol(assay(sce))), replace = FALSE)
ref_data <- sce[, indices]
query_data <- sce[, -indices]

# log transform datasets
ref_data <- logNormCounts(ref_data)
query_data <- logNormCounts(query_data)

# Get cell type scores using SingleR (or any other cell type annotation method)
scores <- SingleR(query_data, ref_data, labels = ref_data$reclustered.broad)

# Add labels to query object
colData(query_data)$labels <- scores$labels

# Selecting highly variable genes (can be customized by the user)
ref_var <- getTopHVGs(ref_data, n = 2000)
query_var <- getTopHVGs(query_data, n = 2000)

# Intersect the gene symbols to obtain common genes
common_genes <- intersect(ref_var, query_var)

ref_data_subset <- ref_data[common_genes, ]
query_data_subset <- query_data[common_genes, ]

# Example usage of the function
calculatePairwiseDistancesAndPlotDensity(query_data = query_data_subset, 
                                         reference_data = ref_data_subset, 
                                         query_cell_type_col = "labels", 
                                         ref_cell_type_col = "reclustered.broad", 
                                         cell_type_query = "CD8", 
                                         cell_type_reference = "CD8", 
                                         distance_metric = "euclidean")

}
