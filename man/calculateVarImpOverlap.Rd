% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculateVarImpOverlap.R
\name{calculateVarImpOverlap}
\alias{calculateVarImpOverlap}
\title{Compare Gene Importance Across Datasets Using Random Forest}
\usage{
calculateVarImpOverlap(
  query_data,
  reference_data,
  query_cell_type_col,
  ref_cell_type_col,
  n_tree = 500,
  n_top = 20
)
}
\arguments{
\item{query_data}{A \code{\linkS4class{SingleCellExperiment}} object containing numeric expression matrix for the query cells.}

\item{reference_data}{A \code{\linkS4class{SingleCellExperiment}} object containing numeric expression matrix for the reference cells.}

\item{query_cell_type_col}{A character string specifying the column name in the query dataset containing cell type annotations.}

\item{ref_cell_type_col}{A character string specifying the column name in the reference dataset containing cell type annotations.}

\item{n_tree}{An integer specifying the number of trees to grow in the Random Forest. Default is 500.}

\item{n_top}{An integer specifying the number of top genes to consider when comparing variable importance scores. Default is 20.}
}
\value{
A list containing three elements:
\item{var_imp_ref}{A list of data frames containing variable importance scores for each combination of cell types in the reference 
dataset.}
\item{var_imp_query}{A list of data frames containing variable importance scores for each combination of cell types in the query 
dataset.}
\item{var_imp_comparison}{A named vector indicating the proportion of top genes that overlap between the reference and query 
datasets for each combination of cell types.}
}
\description{
This function identifies and compares the most important genes for differentiating cell types between a query dataset 
and a reference dataset using Random Forest.
}
\details{
This function uses the Random Forest algorithm to calculate the importance of genes in differentiating between cell types 
within both a reference dataset and a query dataset. The function then compares the top genes identified in both datasets to determine 
the overlap in their importance scores.
}
\examples{
# Load necessary library
library(SingleCellExperiment)
library(scuttle)
library(SingleR)

# Load data
sce <- HeOrganAtlasData(tissue = c("Marrow"), ensembl = FALSE)

# Divide the data into reference and query datasets
set.seed(100)
indices <- sample(ncol(assay(sce)), size = floor(0.7 * ncol(assay(sce))), replace = FALSE)
ref_data <- sce[, indices]
query_data <- sce[, -indices]

# log transform datasets
ref_data <- logNormCounts(ref_data)
query_data <- logNormCounts(query_data)

# Get cell type scores using SingleR (or any other cell type annotation method)
scores <- SingleR(query_data, ref_data, labels = ref_data$reclustered.broad)

# Add labels to query object
colData(query_data)$labels <- scores$labels

# Selecting highly variable genes (can be customized by the user)
ref_var <- getTopHVGs(ref_data, n = 500)
query_var <- getTopHVGs(query_data, n = 500)

# Intersect the gene symbols to obtain common genes
common_genes <- intersect(ref_var, query_var)
ref_data_subset <- ref_data[common_genes, ]
query_data_subset <- query_data[common_genes, ]

# Compare PCA subspaces
rf_output <- calculateVarImpOverlap(query_data_subset, ref_data_subset, 
                                    query_cell_type_col = "labels", 
                                    ref_cell_type_col = "reclustered.broad", 
                                    n_tree = 500,
                                    n_top = 20)

}
\author{
Anthony Christidis, \email{anthony-alexander_christidis@hms.harvard.edu}
}
