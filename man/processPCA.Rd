% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/processPCA.R
\name{processPCA}
\alias{processPCA}
\title{Process PCA for SingleCellExperiment Objects}
\usage{
processPCA(
  query_data = NULL,
  reference_data = NULL,
  max_cells = 5000,
  n_hvgs = 2000,
  assay_name = "logcounts"
)
}
\arguments{
\item{query_data}{A \code{\linkS4class{SingleCellExperiment}} object for query data.
If NULL, no processing is performed on query data. Default is NULL.}

\item{reference_data}{A \code{\linkS4class{SingleCellExperiment}} object for reference data.
If NULL, no processing is performed on reference data. Default is NULL.}

\item{max_cells}{Maximum number of cells to retain per dataset when PCA computation is required.
Objects with more cells will be randomly downsampled to this number before PCA computation.
Objects with existing PCA are never downsampled. Default is 5000.}

\item{n_hvgs}{Number of highly variable genes to select for PCA computation.
When both datasets lack PCA, this number is used for each dataset before
taking the intersection. Default is 2000.}

\item{assay_name}{Name of the assay to use for HVG selection and PCA computation.
Should contain log-normalized expression values. Default is "logcounts".}
}
\value{
When only one dataset is provided, returns the processed SingleCellExperiment object directly.
When both datasets are provided, returns a list containing:
\itemize{
  \item query_data: Processed query data
  \item reference_data: Processed reference data
}
Each returned object will have:
\itemize{
  \item PCA in reducedDims slot
  \item Original cell count if PCA existed, or at most max_cells if PCA was computed
}
}
\description{
This function ensures that \code{\linkS4class{SingleCellExperiment}} objects have PCA computed using
highly variable genes when needed. It only performs downsampling when PCA computation
is required, preserving existing PCA computations without modification.
}
\details{
The function performs the following operations:
\itemize{
  \item Checks if PCA exists in the provided \code{\linkS4class{SingleCellExperiment}} objects
  \item If PCA already exists, returns the object unchanged (no downsampling)
  \item If PCA is missing and dataset is large, downsamples before computing PCA
  \item Computes PCA using highly variable genes when PCA is missing
  \item When both datasets are provided and one has existing PCA, uses the genes from the existing PCA for the other dataset
  \item When both datasets lack PCA, uses the intersection of highly variable genes for consistent PCA spaces
  \item Utilizes scran for HVG selection and scater for PCA computation (soft dependencies)
}

The downsampling strategy uses random sampling without replacement and only occurs
when PCA computation is necessary. This preserves expensive pre-computed PCA results
while ensuring computational efficiency for new PCA computations.

For datasets where one has existing PCA and the other doesn't, the function uses the genes
from the existing PCA rotation matrix to ensure compatible PCA spaces. When both datasets
lack PCA, it uses the intersection of highly variable genes from both datasets.
}
\note{
This function requires the scran and scater packages for HVG selection and PCA computation.
These packages should be installed via BiocManager::install(c("scran", "scater")).

Objects with existing PCA are returned unchanged to preserve expensive pre-computations.
Only datasets requiring PCA computation are subject to downsampling.
}
\examples{
# Example 1: Process single dataset
library(TENxPBMCData)
library(scuttle)

# Load and prepare dataset
pbmc_data <- TENxPBMCData("pbmc3k")
pbmc_subset <- pbmc_data[, 1:500]  # Use subset for example
pbmc_subset <- logNormCounts(pbmc_subset)

# Remove any existing PCA
reducedDims(pbmc_subset) <- list()

# Process dataset - will compute PCA using HVGs
processed_data <- processPCA(query_data = pbmc_subset, n_hvgs = 1000)

# Check results
"PCA" \%in\% reducedDimNames(processed_data)  # Should be TRUE
ncol(processed_data)  # Should be 500 (unchanged)

# Example 2: Process both query and reference datasets
# Create reference dataset
pbmc_ref <- pbmc_data[, 501:1000]
pbmc_ref <- logNormCounts(pbmc_ref)
reducedDims(pbmc_ref) <- list()

# Process both datasets - will use intersection of HVGs
result <- processPCA(
  query_data = pbmc_subset,
  reference_data = pbmc_ref,
  max_cells = 10000,
  n_hvgs = 800
)

# Check results
"PCA" \%in\% reducedDimNames(result$query_data)      # Should be TRUE
"PCA" \%in\% reducedDimNames(result$reference_data)  # Should be TRUE
ncol(result$query_data)      # Should be 500
ncol(result$reference_data)  # Should be 500

}
\author{
Anthony Christidis, \email{anthony-alexander_christidis@hms.harvard.edu}
}
