% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualizeCellTypeMDS.R
\name{visualizeCellTypeMDS}
\alias{visualizeCellTypeMDS}
\title{Visualizing Reference and Query Cell Types using MDS}
\usage{
visualizeCellTypeMDS(
  query_data,
  reference_data,
  cell_types = NULL,
  query_cell_type_col,
  ref_cell_type_col
)
}
\arguments{
\item{query_data}{A \code{\linkS4class{SingleCellExperiment}} containing the single-cell 
expression data and metadata.}

\item{reference_data}{A \code{\linkS4class{SingleCellExperiment}} object containing the single-cell 
expression data and metadata.}

\item{cell_types}{A character vector specifying the cell types to include in the plot. If NULL, all cell types are included.}

\item{query_cell_type_col}{character. The column name in the \code{colData} of \code{query_data} 
that identifies the cell types.}

\item{ref_cell_type_col}{character. The column name in the \code{colData} of \code{reference_data} 
that identifies the cell types.}
}
\value{
A ggplot object representing the MDS scatter plot with cell type coloring.
}
\description{
This function facilitates the assessment of similarity between reference and query datasets 
through Multidimensional Scaling (MDS) scatter plots. It allows the visualization of cell types, 
color-coded with user-defined custom colors, based on a dissimilarity matrix computed from a 
user-selected gene set.
}
\details{
To evaluate dataset similarity, the function selects specific subsets of cells from 
both reference and query datasets. It then calculates Spearman correlations between gene expression profiles, 
deriving a dissimilarity matrix. This matrix undergoes Classical Multidimensional Scaling (MDS) for 
visualization, presenting cell types in a scatter plot, distinguished by colors defined by the user.
}
\examples{
library(scater)
library(scran)
library(scRNAseq)
library(RColorBrewer)

# Load data (replace with your data loading)
sce <- HeOrganAtlasData(tissue = c("Marrow"), ensembl = FALSE)

# Divide the data into reference and query datasets
set.seed(100)
indices <- sample(ncol(assay(sce)), size = floor(0.7 * ncol(assay(sce))), replace = FALSE)
ref_data <- sce[, indices]
query_data <- sce[, -indices]

# log transform datasets
ref_data <- scuttle::logNormCounts(ref_data)
query_data <- scuttle::logNormCounts(query_data)

# Get cell type scores using SingleR (or any other cell type annotation method)
scores <- SingleR::SingleR(query_data, ref_data, labels = ref_data$reclustered.broad)

# Add labels to query object
colData(query_data)$labels <- scores$labels

# Selecting highly variable genes (can be customized by the user)
ref_var <- scran::getTopHVGs(ref_data, n = 2000)
query_var <- scran::getTopHVGs(query_data, n = 2000)

# Intersect the gene symbols to obtain common genes
common_genes <- intersect(ref_var, query_var)
ref_data_subset <- ref_data[common_genes, ]
query_data_subset <- query_data[common_genes, ]

# Generate the MDS scatter plot with cell type coloring
plot <- visualizeCellTypeMDS(query_data = query_data_subset, 
                             reference_data = ref_data_subset, 
                             query_cell_type_col = "labels", 
                             ref_cell_type_col = "reclustered.broad")
print(plot)

}
