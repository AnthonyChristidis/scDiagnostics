% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualizeCellTypePCA.R
\name{visualizeCellTypePCA}
\alias{visualizeCellTypePCA}
\title{Visualize Principal Components for Different Cell Types}
\usage{
visualizeCellTypePCA(
  query_data,
  reference_data,
  n_components = 10,
  cell_types = NULL,
  query_cell_type_col,
  ref_cell_type_col,
  pc_subset = c(1:5)
)
}
\arguments{
\item{query_data}{A \code{\linkS4class{SingleCellExperiment}} object containing numeric expression matrix for the query cells.}

\item{reference_data}{A \code{\linkS4class{SingleCellExperiment}} object containing numeric expression matrix for the reference cells.}

\item{n_components}{An integer specifying the number of principal components to use for projection. Defaults to 10. 
Must be less than or equal to the number of components available in the reference PCA.}

\item{cell_types}{A character vector specifying the cell types to include in the plot. If NULL, all cell types are included.}

\item{query_cell_type_col}{character. The column name in the \code{colData} of \code{query_data} 
that identifies the cell types.}

\item{ref_cell_type_col}{character. The column name in the \code{colData} of \code{reference_data} 
that identifies the cell types.}

\item{pc_subset}{A numeric vector specifying which principal components to include in the plot. Default is PC1 to PC5.}
}
\value{
A ggplot object representing the boxplots of specified principal components for the given cell types and datasets.
}
\description{
This function plots the principal components for different cell types in the query and reference datasets.
}
\details{
This function projects the query dataset onto the principal component space of the reference dataset and then visualizes the 
specified principal components for the specified cell types.
It uses the `projectPCA` function to perform the projection and `ggplot2` to create the plots.
}
\examples{
# Load required libraries
library(scRNAseq)
library(scuttle)
library(SingleR)
library(scran)
library(scater)

# Load data (replace with your data loading)
sce <- HeOrganAtlasData(tissue = c("Marrow"), ensembl = FALSE)

# Divide the data into reference and query datasets
set.seed(100)
indices <- sample(ncol(assay(sce)), size = floor(0.7 * ncol(assay(sce))), replace = FALSE)
ref_data <- sce[, indices]
query_data <- sce[, -indices]

# log transform datasets
ref_data <- scuttle::logNormCounts(ref_data)
query_data <- scuttle::logNormCounts(query_data)

# Get cell type scores using SingleR (or any other cell type annotation method)
scores <- SingleR::SingleR(query_data, ref_data, labels = ref_data$reclustered.broad)

# Add labels to query object
colData(query_data)$labels <- scores$labels

# Selecting highly variable genes (can be customized by the user)
ref_var <- scran::getTopHVGs(ref_data, n = 2000)
query_var <- scran::getTopHVGs(query_data, n = 2000)

# Intersect the gene symbols to obtain common genes
common_genes <- intersect(ref_var, query_var)
ref_data_subset <- ref_data[common_genes, ]
query_data_subset <- query_data[common_genes, ]

# Run PCA on the reference data (assumed to be prepared)
ref_data_subset <- runPCA(ref_data_subset)

pc_plot <- visualizeCellTypePCA(query_data_subset, ref_data_subset,
                                n_components = 10,
                                cell_types = c("CD4", "CD8", "B_and_plasma", "Myeloid"),
                                query_cell_type_col = "labels", 
                                ref_cell_type_col = "reclustered.broad", 
                                pc_subset = c(1:5))
pc_plot


}
\author{
Anthony Christidis, \email{anthony-alexander_christidis@hms.harvard.edu}
}
